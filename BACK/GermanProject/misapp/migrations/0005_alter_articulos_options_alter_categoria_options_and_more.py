# Generated by Django 4.2.1 on 2023-07-01 13:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('misapp', '0004_alter_articulos_idarticulo_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='articulos',
            options={'verbose_name': 'Articulo', 'verbose_name_plural': 'Articulos'},
        ),
        migrations.AlterModelOptions(
            name='categoria',
            options={'verbose_name': 'Categoria', 'verbose_name_plural': 'Categorias'},
        ),
        migrations.AlterModelOptions(
            name='detalleingreso',
            options={'verbose_name': 'Detalle_Ingreso', 'verbose_name_plural': 'Detalles_de_Ingresos'},
        ),
        migrations.AlterModelOptions(
            name='detalleventa',
            options={'verbose_name': 'Detalle_Venta', 'verbose_name_plural': 'Detalles_Ventas'},
        ),
        migrations.AlterModelOptions(
            name='envio',
            options={'verbose_name': 'Envio', 'verbose_name_plural': 'Envios'},
        ),
        migrations.AlterModelOptions(
            name='estados',
            options={'verbose_name': 'Estado', 'verbose_name_plural': 'Estados'},
        ),
        migrations.AlterModelOptions(
            name='ingreso',
            options={'verbose_name': 'Ingreso', 'verbose_name_plural': 'Ingresos'},
        ),
        migrations.AlterModelOptions(
            name='orden',
            options={'verbose_name': 'Orden', 'verbose_name_plural': 'Ordenes'},
        ),
        migrations.AlterModelOptions(
            name='proveedores',
            options={'verbose_name': 'Proveedor', 'verbose_name_plural': 'Proveedores'},
        ),
        migrations.AlterModelOptions(
            name='rol',
            options={'verbose_name': 'rol', 'verbose_name_plural': 'roles'},
        ),
        migrations.AlterField(
            model_name='articulos',
            name='imagen',
            field=models.URLField(),
        ),
        migrations.AlterModelTable(
            name='articulos',
            table='Articulos',
        ),
        migrations.AlterModelTable(
            name='categoria',
            table='Categoria',
        ),
        migrations.AlterModelTable(
            name='detalleingreso',
            table='DetalleIngresos',
        ),
        migrations.AlterModelTable(
            name='detalleventa',
            table='DetallesVenta',
        ),
        migrations.AlterModelTable(
            name='envio',
            table='Envio',
        ),
        migrations.AlterModelTable(
            name='estados',
            table='Estados',
        ),
        migrations.AlterModelTable(
            name='ingreso',
            table='Ingresos',
        ),
        migrations.AlterModelTable(
            name='orden',
            table='Orden',
        ),
        migrations.AlterModelTable(
            name='proveedores',
            table='Proveedores',
        ),
        migrations.AlterModelTable(
            name='rol',
            table='Roles',
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_usuario', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('tipo_dni', models.CharField(max_length=10)),
                ('numero_dni', models.IntegerField()),
                ('direccion', models.TextField(default='direccion', max_length=100)),
                ('telefono', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('idestados', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misapp.estados')),
                ('idrol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='misapp.rol')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='orden',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='USUARIOS',
        ),
    ]
